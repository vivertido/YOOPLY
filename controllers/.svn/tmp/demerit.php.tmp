<?php

class Demerit extends MY_Controller
{
	function __construct()
	{
		parent::__construct();

		if(!$this->session->userdata('userid'))
		{
			redirect('login');
			return;
		}
	}

	function school($period = '')
	{
		$school_id = $this->session->userdata('schoolid');

		if($this->session->userdata('role') != 'a')
		{
			$this->layout->view('student/error_permissiondenied');
			return;
		}


		$this->_list($period, 'school', $school_id);
	}

	function mine($period = '')
	{
		$school_id = $this->session->userdata('schoolid');
		$user_id = $this->session->userdata('userid');

		switch($this->session->userdata('role'))
		{
			case 'a':
			case 't':
				$this->_list($period, 'mine', $school_id, $user_id);
			break;
			case 's':
				$this->_list($period, 'mine', $school_id, 0, $user_id);
			break;
		}
	}

	function _list($period, $filter, $school_id, $teacher_id = 0, $student_id = 0)
	{
		$data = array(
			'title_for_layout' => 'Demerits',
			'filter' => $filter
		);

		$start_time = $end_time = 0;
		switch($period)
		{
			case 'month':
				$start_time = strtotime(date('Y-m-01 00:00:00'));
				$end_time = strtotime(date('Y-m-t 23:59:59'));
				$data['period'] = $period;
			break;
			case 'week':
				$start_time = strtotime('last sunday');
				$end_time = strtotime('next sunday')-1;
				$data['period'] = 'week';
			break;
			case 'all':
				$data['period'] = 'all';
			break;
			default:
			case 'today':
				$start_time = strtotime(date('Y-m-d 00:00:00'));
				$data['period'] = 'today';
			break;
		}

		$expand_student = ($student_id == 0);
		$expand_teacher = ($teacher_id == 0);

		$this->load->model('Demerit_model');
		$data['demerits'] = $this->Demerit_model->find($school_id, $teacher_id, $student_id, 0, 0, $start_time, $end_time, $expand_teacher, $expand_student);

		$this->load->model('Settings_model');
		$demerit_settings = json_decode($this->Settings_model->get_settings($school_id, 'demerits'));
	
		$data['demeritlabel'] = $demerit_settings->demeritlabel;
		$data['title_for_layout'] = trim($demerit_settings->demeritlabel).'s';

		$this->layout->view('demerit/list', $data);
	}


	function student($student_id)
	{
		$school_id = $this->session->userdata('schoolid');
		
		if($this->session->userdata('role') == 'a')
		{
			$teacher_id = 0;
		}
		else
		{
			$teacher_id = $this->session->userdata('userid');	
		}

<<<<<<< .mine
		$this->load->model('Demerit_model');
		$demerits = $this->Demerit_model->get_by_student($school_id, $student_id, $teacher_id);

=======
>>>>>>> .r117
		$this->load->model('User_model');
		$student = $this->User_model->get_user($student_id);

		if(empty($student))
		{
			$this->layout->view('teacher/error_nostudentfound');
			return;
		}

		$permission_denied = true;
		switch($this->session->userdata('role'))
		{
			case 't':
				if($this->User_model->has_teacher($student_id, $teacher_id))
				{
					$permission_denied = false;
				}
			break;
			case 'a':
				$this->load->model('School_model');
				if($this->School_model->has_student($school_id, $student_id))
				{
					$permission_denied = false;
				}
			break;
		}

		if($permission_denied)
		{
			$this->layout->view('student/error_permissiondenied');
			return;
		}

		if($this->session->userdata('role') == 'a') 
		{
			$teacher_id = 0;
		}
		
		$this->load->model('Demerit_model');
		$demerits = $this->Demerit_model->get_by_student($school_id, $teacher_id, $student_id);

		$data = array(
			'demerits' => $demerits,
			'student' => $student,
			'title_for_layout' => $student->firstname.' '.$student->lastname
		);

		$this->load->model('Settings_model');
		$demerit_settings = json_decode($this->Settings_model->get_settings($school_id, 'demerits'));
	
		$data['demeritlabel'] = $demerit_settings->demeritlabel;

		$this->layout->view('demerit/student', $data);
	}

	function view($demerit_id)
	{
		$school_id = $this->session->userdata('schoolid');
		$user_id = $this->session->userdata('userid');

		$this->load->model('Demerit_model');
		$demerit = $this->Demerit_model->get_demerit($demerit_id);

		if(empty($demerit) || $demerit->status != DEMERIT_STATUS_ACTIVE)
		{
			$this->layout->view('demerit/error_demeritnotfound');
			return;
		}

		$this->load->model('User_model');
		$student = $this->User_model->get_user($demerit->studentid);

		$permission_denied = true;
		switch($this->session->userdata('role'))
		{
			case 't':
				if($this->User_model->has_teacher($student->userid, $user_id))
				{
					$permission_denied = false;
				}
			break;
			case 'a':
				if($demerit->schoolid == $school_id)
				{
					$permission_denied = false;
				}
			break;
			case 's':
				if($demerit->studentid == $user_id)
				{
					$permission_denied = false;
				}
			break;
		}

		if($permission_denied)
		{
			$this->layout->view('demerit/error_permissiondenied');
			return;
		}

		$data = array(
			'demerit' => $demerit,
			'student' => $student,
			'title_for_layout' => 'Demerit'
		);

		$this->load->model('Settings_model');
		$demerit_settings = json_decode($this->Settings_model->get_settings($school_id, 'demerits'));
	
		$data['demeritlabel'] = $demerit_settings->demeritlabel;
		$data['title_for_layout'] = trim($demerit_settings->demeritlabel).'s';

		$this->layout->view('demerit/view', $data);
	}

	function remove($demerit_id)
	{
		$school_id = $this->session->userdata('schoolid');
		$user_id = $this->session->userdata('userid');

		$this->load->model('Demerit_model');
		$demerit = $this->Demerit_model->get_demerit($demerit_id);

		if(empty($demerit) || $demerit->status != DEMERIT_STATUS_ACTIVE)
		{
			$this->layout->view('demerit/error_demeritnotfound');
			return;
		}

		$this->load->model('User_model');
		$student = $this->User_model->get_user($demerit->studentid);

		$permission_denied = true;
		switch($this->session->userdata('role'))
		{
			case 't':
				if($this->User_model->has_teacher($student->userid, $user_id))
				{
					$permission_denied = false;
				}
			break;
			case 'a':
				if($demerit->schoolid == $school_id)
				{
					$permission_denied = false;
				}
			break;
			case 's':
				if($demerit->studentid == $user_id)
				{
					$permission_denied = false;
				}
			break;
		}

		if($permission_denied)
		{
			$this->layout->view('demerit/error_permissiondenied');
			return;
		}

		if($this->input->post('cancel'))
		{
			redirect('demerit/view/'.$demerit_id);
			return;
		}

		if($this->input->post('submit'))
		{
			$this->Demerit_model->remove($demerit_id);

			switch($this->session->userdata('role'))
			{
				case 'a':
					redirect('admin');
				break;
				case 't':
					redirect('teacher');
				break;
			}
		}
		else
		{
			$data = array(
				'demerit' => $demerit,
				'student' => $student,
				'title_for_layout' => 'Demerit'
			);

			$this->load->model('Settings_model');
			$demerit_settings = json_decode($this->Settings_model->get_settings($school_id, 'demerits'));
		
			$data['demeritlabel'] = $demerit_settings->demeritlabel;
			$data['title_for_layout'] = trim($demerit_settings->demeritlabel).'s';

			$this->layout->view('demerit/remove', $data);		
		}
	}
}
?>